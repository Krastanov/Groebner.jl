var documenterSearchIndex = {"docs":
[{"location":"#FastGroebner","page":"Home","title":"FastGroebner","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = FastGroebner","category":"page"},{"location":"","page":"Home","title":"Home","text":"groebner","category":"page"},{"location":"#FastGroebner.groebner","page":"Home","title":"FastGroebner.groebner","text":"function groebner(             polys::Vector{Poly};             reduced::Bool=true,             rng::Rng=Random.MersenneTwister(42),             loglevel::LogLevel=Logging.Warn             ) where {Poly, Rng<:Random.AbstractRNG}\n\nComputes the Groebner basis of the ideal generated by `polys`.\n\nIf `reduced` is set to true, returns the reduced basis, which is unique.\nOtherwise, there are no guarantees on uniqueness (and also on minimality).\n\nRandom generator `rng` is responsible for hashing monomials during computation.\n\nBy default, the function executes silently.\nThis can be changed adjusting the `loglevel`.\n\nSuported monomial orderings are:\n- `degrevlex`\n- `lex`\n\n\n\n\n\n","category":"function"}]
}
